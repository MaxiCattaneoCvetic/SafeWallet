server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.int}
spring.data.mongodb.uri=mongodb+srv://safewallet:safewallet@safewalletcluster.tcqvwuk.mongodb.net/safewallet?retryWrites=true&w=majority


#-----------------Variables de entorno---------------
base.url=http://swmax.cloud/
SERVER_URL=${base.url}
REALM_NAME=safewallet
REALM_MASTER=master
REALM_CLI=admin-cli
USER_CONSOLE=admin
USER_PASSWORD=admin



# Definimos la URL y el puerto en las cuales esta corriendo mi config-server
# spring.cloud.config.uri=https://configserver.up.railway.app/
eureka.client.serviceUrl.defaultZone=https://safewallet-production.up.railway.app/eureka/
spring.application.name=register-keycloak


# El resto de la configuracion se encuentra en config-server


#-----------------CONFIGURACION MICROSERVICIO CONFIG-SERVER ---------------
# Definimos cual es el perfil de propiedades que queremos cargar desde nuestro config
spring.cloud.config.profile=prod

#-----------------CONFIGURACION configserver ACTUATOR ---------------

# Configuramos el refresh para que escuche los cambios en git y refresque la config
management.endpoints.web.exposure.include=*

#-----------------CONFIGURACION RABBITMQ ---------------

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


#----------URL DEL REINO------------
spring.security.oauth2.resourceserver.jwt.issuer-uri=${base.url}realms/safewallet

#----------Establecemos la url de nuestro IAM------------
#Esto nos provee el certificado para desencriptar el token que se genera
#Es la firma pÃºblica que hace nuestro IAM
#EJEMPLO >>> "jwks_uri": "http://localhost:8080/realms/SafeWallet-realm/protocol/openid-connect/certs"

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${base.url}realms/safewallet/protocol/openid-connect/certs

#----------Nombre del cliente-----------
jwt.auth.converter.resource-id=safe-wallet-api

#----------ATRIBUTO DENTRO DEL TOKEN DESENCRIPTADO QUE ME DARA EL NOMBRE DEL USUARIO------------
#----------EL NOMBRE POR DEFECTO ES PREFFERED_USERNAME------------
jwt.auth.converter.principal-attribute=preferred_username

#-----------------CONFIGURACION SWAGGER --------------->
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

#Definimos la ruta
springdoc.swagger-ui.path=/doc/swagger-ui.html

springdoc.pathsToMatch=/userKeycloak/**, /account/**

