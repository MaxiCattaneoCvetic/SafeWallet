spring.application.name=api-gateway


# Configuracion eureka server
#habilitar la funcionalidad de descubrimiento de servicios en Spring Cloud Gateway. Esto significa que el gateway puede descubrir dinámicamente las instancias de servicios registradas en el Service Registry (EUREKA)

spring.cloud.gateway.discovery.locator.enable=true

# Le asignamos un ID unico y dinamico
eureka.instance.instance-id=${spring.application.name}: ${random.uuid}

# Desabilita la estrategia predetermminada de balanceo de carga
spring.cloud.loadbalancer.ribbon.enabled=false


# ---------- Configuracion del ruteo dinamico

# los routes Son una lista de puntos de entrada que contienen la lista de todas las rutas de nuestros microservicios

# --------CONFIGURACION  REGISTER KEYCLOAK MICROSERVICE -------------
spring.cloud.gateway.routes[0].id=register-keycloak

#lb:// con eso le decimos al gate que use el loadbalance para acceder a nuestro microservicio (recordar -> tiene puertos dinamicos)
spring.cloud.gateway.routes[0].uri=lb://REGISTER-KEYCLOAK
spring.cloud.gateway.routes[0].predicates[0]=Path=/safewallet/config/**, /userKeycloak/**


# --------CONFIGURACION  REGISTER FULL MICROSERVICE -------------
spring.cloud.gateway.routes[1].id=register-full
spring.cloud.gateway.routes[1].uri=lb://REGISTER-FULL
spring.cloud.gateway.routes[1].predicates[0]=Path=/user/**


## ---
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

spring.cloud.config.enabled=false
spring.cloud.config.import-check.enabled=false